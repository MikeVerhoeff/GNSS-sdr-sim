from pynq.overlays.base import BaseOverlay
from pynq import MMIO

base_overlay = BaseOverlay("base.bit")
help(base_overlay)

IP_BASE_ADDRESS = 0x40000000
ADDRESS_RANGE = 0x1000

CHANNEL_ADDRESS_OFFSET = 0x00
PRN_ADDRESS_OFFSET     = 0x01
POWER_ADDRESS_OFFSET   = 0x02
BITS_ADDRESS_OFFSET    = 0x04
NSTEP_ADDRESS_OFFSET   = 0x14
PSTEP_ADDRESS_OFFSET   = 0x24
STORE_ADDRESS_OFFSET   = 0x30
CONFIG_ADDRESS_OFFSET  = 0x34 # clock_reset - gnns_reset - gnns_enable

CLOCK_RESET = 0x0001
GNSS_RESET  = 0x0002
GNSS_ENABLE = 0x0004
STORE = 0x0001


mmio = MMIO(IP_BASE_ADDRESS, ADDRESS_RANGE)

data = 0xdeadbeef

mmio.write(STORE_ADDRESS_OFFSET, GNSS_ENABLE)
mmio.write(STORE_ADDRESS_OFFSET, GNSS_ENABLE | GNSS_RESET)
mmio.write(STORE_ADDRESS_OFFSET, GNSS_ENABLE)

mmio.write(CHANNEL_ADDRESS_OFFSET, 1)
mmio.write(    PRN_ADDRESS_OFFSET, 1)
mmio.write(  POWER_ADDRESS_OFFSET, 255)
mmio.write(   BITS_ADDRESS_OFFSET, data)
mmio.write(  PSTEP_ADDRESS_OFFSET, 0)
mmio.write(  NSTEP_ADDRESS_OFFSET, 0)
mmio.write(STORE_ADDRESS_OFFSET, STORE)
mmio.write(STORE_ADDRESS_OFFSET, 0)
mmio.write(STORE_ADDRESS_OFFSET, STORE)
mmio.write(STORE_ADDRESS_OFFSET, 0)
mmio.write(STORE_ADDRESS_OFFSET, STORE)
mmio.write(STORE_ADDRESS_OFFSET, 0)
mmio.write(STORE_ADDRESS_OFFSET, STORE)
mmio.write(STORE_ADDRESS_OFFSET, 0)
mmio.write(STORE_ADDRESS_OFFSET, STORE)
mmio.write(STORE_ADDRESS_OFFSET, 0)
mmio.write(STORE_ADDRESS_OFFSET, STORE)
mmio.write(STORE_ADDRESS_OFFSET, 0)

#result = mmio.read(ADDRESS_OFFSET)